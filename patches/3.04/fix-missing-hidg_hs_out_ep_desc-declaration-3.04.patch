From 3df4caac7e8aadadcd9a4785f3a917b631b68424 Mon Sep 17 00:00:00 2001
From: Re4son <re4son@users.noreply.github.com>
Date: Sun, 3 May 2020 11:16:16 +1000
Subject: [PATCH] Fix missing hidg_hs_out_ep_desc declaration

Missing declaration results in the following compilation error:

drivers/usb/gadget/f_hid.c: In function 'hidg_bind':
/drivers/usb/gadget/f_hid.c:563:2: error: 'hidg_hs_out_ep_desc' undeclared (first use in this function)
  hidg_hs_out_ep_desc.bEndpointAddress =
  ^
/drivers/usb/gadget/f_hid.c:563:2: note: each undeclared identifier is reported only once for each function it appears in
/drivers/usb/gadget/f_hid.c:564:3: error: 'hidg_fs_out_ep_desc' undeclared (first use in this function)
   hidg_fs_out_ep_desc.bEndpointAddress;
   ^
  CC      drivers/staging/prima/CORE/MAC/src/pe/lim/limAIDmgmt.o
make[4]: *** [/scripts/Makefile.build:308: drivers/usb/gadget/f_hid.o] Error 1
make[3]: *** [/scripts/Makefile.build:443: drivers/usb/gadget] Error 2

Signed-off-by: Re4son <re4son@users.noreply.github.com>
---
 drivers/usb/gadget/f_hid.c | 31 ++++++++++++++++++++++++++-----
 1 file changed, 26 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/gadget/f_hid.c b/drivers/usb/gadget/f_hid.c
index d7cb52a3dff..aaa26c3572c 100644
--- a/drivers/usb/gadget/f_hid.c
+++ b/drivers/usb/gadget/f_hid.c
@@ -122,7 +122,6 @@ static struct hid_descriptor hidg_desc = {
 };
 
 /* High-Speed Support */
-
 static struct usb_endpoint_descriptor hidg_hs_in_ep_desc = {
 	.bLength		= USB_DT_ENDPOINT_SIZE,
 	.bDescriptorType	= USB_DT_ENDPOINT,
@@ -134,16 +133,25 @@ static struct usb_endpoint_descriptor hidg_hs_in_ep_desc = {
 				      * (struct hidg_func_descriptor)
 				      */
 };
-
+static struct usb_endpoint_descriptor hidg_hs_out_ep_desc = {
+	.bLength		= USB_DT_ENDPOINT_SIZE,
+	.bDescriptorType	= USB_DT_ENDPOINT,
+	.bEndpointAddress	= USB_DIR_OUT,
+	.bmAttributes		= USB_ENDPOINT_XFER_INT,
+	/*.wMaxPacketSize	= DYNAMIC */
+	.bInterval		= 4, /* FIXME: Add this field in the
+				      * HID gadget configuration?
+				      * (struct hidg_func_descriptor)
+				      */
+};
 static struct usb_descriptor_header *hidg_hs_descriptors[] = {
 	(struct usb_descriptor_header *)&hidg_interface_desc,
 	(struct usb_descriptor_header *)&hidg_desc,
 	(struct usb_descriptor_header *)&hidg_hs_in_ep_desc,
+	(struct usb_descriptor_header *)&hidg_hs_out_ep_desc,
 	NULL,
 };
-
 /* Full-Speed Support */
-
 static struct usb_endpoint_descriptor hidg_fs_in_ep_desc = {
 	.bLength		= USB_DT_ENDPOINT_SIZE,
 	.bDescriptorType	= USB_DT_ENDPOINT,
@@ -155,11 +163,22 @@ static struct usb_endpoint_descriptor hidg_fs_in_ep_desc = {
 				       * (struct hidg_func_descriptor)
 				       */
 };
-
+static struct usb_endpoint_descriptor hidg_fs_out_ep_desc = {
+	.bLength		= USB_DT_ENDPOINT_SIZE,
+	.bDescriptorType	= USB_DT_ENDPOINT,
+	.bEndpointAddress	= USB_DIR_OUT,
+	.bmAttributes		= USB_ENDPOINT_XFER_INT,
+	/*.wMaxPacketSize	= DYNAMIC */
+	.bInterval		= 10, /* FIXME: Add this field in the
+				       * HID gadget configuration?
+				       * (struct hidg_func_descriptor)
+				       */
+};
 static struct usb_descriptor_header *hidg_fs_descriptors[] = {
 	(struct usb_descriptor_header *)&hidg_interface_desc,
 	(struct usb_descriptor_header *)&hidg_desc,
 	(struct usb_descriptor_header *)&hidg_fs_in_ep_desc,
+	(struct usb_descriptor_header *)&hidg_fs_out_ep_desc,
 	NULL,
 };
 
@@ -552,6 +571,8 @@ static int hidg_bind(struct usb_configuration *c, struct usb_function *f)
 	hidg_interface_desc.bInterfaceProtocol = hidg->bInterfaceProtocol;
 	hidg_hs_in_ep_desc.wMaxPacketSize = cpu_to_le16(hidg->report_length);
 	hidg_fs_in_ep_desc.wMaxPacketSize = cpu_to_le16(hidg->report_length);
+	hidg_hs_out_ep_desc.wMaxPacketSize = cpu_to_le16(hidg->report_length);
+	hidg_fs_out_ep_desc.wMaxPacketSize = cpu_to_le16(hidg->report_length);
 	hidg_desc.desc[0].bDescriptorType = HID_DT_REPORT;
 	hidg_desc.desc[0].wDescriptorLength =
 		cpu_to_le16(hidg->report_desc_length);
-- 
2.26.1

